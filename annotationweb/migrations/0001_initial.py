# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2019-05-15 09:48
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ImageAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('image_quality', models.CharField(choices=[('poor', 'Poor'), ('ok', 'OK'), ('good', 'Good')], max_length=50)),
                ('comments', models.TextField()),
                ('rejected', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ImageMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='ImageSequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(help_text='Should contain # which will be replaced with an integer, increasing with 1 for each frame. E.g. /path/to/frame_#.png', max_length=1024)),
                ('nr_of_frames', models.PositiveIntegerField()),
                ('start_frame_nr', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='KeyFrameAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frame_nr', models.PositiveIntegerField()),
                ('image_annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotationweb.ImageAnnotation')),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('color_red', models.PositiveSmallIntegerField()),
                ('color_green', models.PositiveSmallIntegerField()),
                ('color_blue', models.PositiveSmallIntegerField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='annotationweb.Label')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Use anonymized id', max_length=200)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotationweb.Dataset')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('show_entire_sequence', models.BooleanField(default=False, help_text='Allow user to see entire sequence.')),
                ('frames_before', models.PositiveIntegerField(default=0, help_text='How many frames to allow user to see before a key frame')),
                ('frames_after', models.PositiveIntegerField(default=0, help_text='How many frames to allow user to see after a key frame')),
                ('auto_play', models.BooleanField(default=True, help_text='Auto play image sequences')),
                ('shuffle_videos', models.BooleanField(default=True, help_text='Shuffle videos for annotation task')),
                ('user_frame_selection', models.BooleanField(default=False, help_text='Annotaters can select which frames to annotate in a video')),
                ('annotate_single_frame', models.BooleanField(default=True, help_text='Annotate a single frame at a time in videos')),
                ('type', models.CharField(choices=[('classification', 'Classification'), ('segmentation', 'Segmentation'), ('boundingbox', 'Bounding box'), ('landmark', 'Landmark'), ('cardiac_segmentation', 'Cardiac segmentation'), ('cardiac_landmark', 'Cardiac landmark'), ('spline_segmentation', 'Spline segmentation')], max_length=50)),
                ('description', models.TextField(blank=True, default='')),
                ('large_image_layout', models.BooleanField(default=False, help_text='Use a large image layout for annotation')),
                ('dataset', models.ManyToManyField(to='annotationweb.Dataset')),
                ('label', models.ManyToManyField(help_text='<button onclick="window.open(\'/new-label/\', \'Add new label\', \'width=400,height=400,scrollbars=no\');" type="button">Add new label</button>', to='annotationweb.Label')),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='imagesequence',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotationweb.Subject'),
        ),
        migrations.AddField(
            model_name='imagemetadata',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotationweb.ImageSequence'),
        ),
        migrations.AddField(
            model_name='imageannotation',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotationweb.ImageSequence'),
        ),
        migrations.AddField(
            model_name='imageannotation',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotationweb.Task'),
        ),
        migrations.AddField(
            model_name='imageannotation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
